{"version":3,"sources":["components/flat.js","components/marker.js","App.js","reportWebVitals.js","index.js"],"names":["Flat","handleClick","props","selectFlat","flat","style","backgroundImage","this","imageUrl","title","price","name","className","onClick","React","Component","Marker","classes","selected","App","setState","selectedFlat","handleSearch","event","search","target","value","flats","state","allFlats","filter","RegExp","exec","fetch","then","response","json","data","center","lat","lng","type","placeholder","onChange","map","zoom","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","root","ReactDOM","render","document","getElementById"],"mappings":"qTAsBeA,E,4MALbC,YAAc,WACZ,EAAKC,MAAMC,WAAW,EAAKD,MAAME,O,4CAbnC,WACE,IAAMC,EAAQ,CACZC,gBAAgB,QAAD,OAAUC,KAAKL,MAAME,KAAKI,SAA1B,OAEXC,EAAK,UAAMF,KAAKL,MAAME,KAAKM,MAAtB,oBAAkCH,KAAKL,MAAME,KAAKO,MAC7D,OACE,sBAAKC,UAAU,OAAOC,QAASN,KAAKN,YAApC,UACE,qBAAKW,UAAU,eAAeP,MAAOA,IACrC,qBAAKO,UAAU,aAAf,SAA6BH,W,GATlBK,IAAMC,WCSVC,G,kKATb,WACE,IAAIC,EAAU,SAId,OAHIV,KAAKL,MAAMgB,WACbD,GAAW,aAEN,sBAAKL,UAAWK,EAAhB,UAA0BV,KAAKL,MAAMQ,MAArC,gB,GANUI,IAAMC,YC0EZI,G,wDArEb,WAAYjB,GAAQ,IAAD,8BACjB,cAAMA,IAqBRC,WAAa,SAACC,GACZ,EAAKgB,SAAS,CACZC,aAAcjB,KAxBC,EA4BnBkB,aAAe,SAACC,GACd,EAAKH,SAAS,CACZI,OAAQD,EAAME,OAAOC,MACrBC,MAAO,EAAKC,MAAMC,SAASC,QAAO,SAAC1B,GAAD,OAAU,IAAI2B,OAAOR,EAAME,OAAOC,MAAO,KAAKM,KAAK5B,EAAKO,YA7B5F,EAAKiB,MAAQ,CACXD,MAAO,GACPE,SAAU,GACVR,aAAc,KACdG,OAAQ,IANO,E,qDAUnB,WAAqB,IAAD,OAClBS,MAAM,iFACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAACG,GACL,EAAKjB,SAAS,CACZS,SAAUQ,EACVV,MAAOU,EACPhB,aAAcgB,EAAK,U,oBAkB3B,WAAU,IAAD,OACHC,EAAS,CACXC,IAAK,QAASC,IAAK,QAKrB,OAHIjC,KAAKqB,MAAMP,eACbiB,EAAS,CAAEC,IAAKhC,KAAKqB,MAAMP,aAAakB,IAAKC,IAAKjC,KAAKqB,MAAMP,aAAamB,MAG1E,sBAAK5B,UAAU,MAAf,UACE,sBAAKA,UAAU,OAAf,UACE,qBAAKA,UAAU,SAAf,SACE,uBAAO6B,KAAK,OAAOC,YAAY,YAAYhB,MAAOnB,KAAKqB,MAAMJ,OAC3DmB,SAAUpC,KAAKe,iBAEnB,qBAAKV,UAAU,QAAf,SACGL,KAAKqB,MAAMD,MAAMiB,KAAI,SAACxC,GACrB,OAAO,cAAC,EAAD,CAAsBA,KAAMA,EAAMD,WAAY,EAAKA,YAAxCC,EAAKO,cAI7B,qBAAKC,UAAU,MAAf,SACE,cAAC,IAAD,CACE0B,OAAQA,EACRO,KAAM,GAFR,SAGGtC,KAAKqB,MAAMD,MAAMiB,KAAI,SAACxC,GACrB,OAAO,cAAC,EAAD,2BAAYA,GAAZ,IAAkBc,SAAUd,IAAS,EAAKwB,MAAMP,8B,GA7DnDN,cCKH+B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCARO,EAAO,8BACT,cAAC,EAAD,MAGJC,IAASC,OAAOF,EAAMG,SAASC,eAAe,SAK9CZ,M","file":"static/js/main.b7362390.chunk.js","sourcesContent":["\nimport React from \"react\";\nimport \"./flat.css\";\n\nclass Flat extends React.Component {\n  render() {\n    const style = {\n      backgroundImage: `url('${this.props.flat.imageUrl}')`\n    };\n    const title = `${this.props.flat.price}€ - ${this.props.flat.name}`\n    return (\n      <div className=\"flat\" onClick={this.handleClick}>\n        <div className=\"flat-picture\" style={style}></div>\n        <div className=\"flat-title\">{title}</div>\n      </div>);\n  }\n\n  handleClick = () => {\n    this.props.selectFlat(this.props.flat);\n  }\n}\n\nexport default Flat;","import React from \"react\";\nimport './marker.css';\n\nclass Marker extends React.Component {\n  render() {\n    let classes = \"marker\";\n    if (this.props.selected) {\n      classes += \" selected\";\n    }\n    return <div className={classes}>{this.props.price}€</div>;\n  }\n}\n\nexport default Marker;","import React, { Component } from 'react';\nimport GoogleMapReact from 'google-map-react';\n\nimport Flat from './components/flat';\nimport Marker from './components/marker';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      flats: [],\n      allFlats: [],\n      selectedFlat: null,\n      search: \"\"\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://raw.githubusercontent.com/lewagon/flats-boilerplate/master/flats.json\")\n      .then(response => response.json())\n      .then((data) => {\n        this.setState({\n          allFlats: data,\n          flats: data,\n          selectedFlat: data[0]\n        })\n      })\n  }\n\n  selectFlat = (flat) => {\n    this.setState({\n      selectedFlat: flat\n    });\n  }\n\n  handleSearch = (event) => {\n    this.setState({\n      search: event.target.value,\n      flats: this.state.allFlats.filter((flat) => new RegExp(event.target.value, \"i\").exec(flat.name))\n    })\n  }\n\n  render() {\n    let center = {\n      lat: 48.8566, lng: 2.3522\n    };\n    if (this.state.selectedFlat) {\n      center = { lat: this.state.selectedFlat.lat, lng: this.state.selectedFlat.lng }\n    }\n    return (\n      <div className=\"app\">\n        <div className=\"main\">\n          <div className=\"search\">\n            <input type=\"text\" placeholder=\"Search...\" value={this.state.search}\n              onChange={this.handleSearch} />\n          </div>\n          <div className=\"flats\">\n            {this.state.flats.map((flat) => {\n              return <Flat key={flat.name} flat={flat} selectFlat={this.selectFlat} />\n            })}\n          </div>\n        </div>\n        <div className=\"map\">\n          <GoogleMapReact\n            center={center}\n            zoom={14}>\n            {this.state.flats.map((flat) => {\n              return <Marker {...flat} selected={flat === this.state.selectedFlat} />\n            })}\n          </GoogleMapReact>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n// import Hello from './components/hello';\n\nconst root = <div>\n    <App />\n  </div>\n\nReactDOM.render(root, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}